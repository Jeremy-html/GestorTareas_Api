// <auto-generated />
using System;
using GestorTareas_Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GestorTareas_Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GestorTareas_Api.Models.Categoria", b =>
                {
                    b.Property<int>("ID_Categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Categoria"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Categoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("GestorTareas_Api.Models.Tarea", b =>
                {
                    b.Property<int>("ID_Tarea")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Tarea"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Entrega")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID_Usuario")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.HasKey("ID_Tarea");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Tareas");
                });

            modelBuilder.Entity("GestorTareas_Api.Models.TareaCategoria", b =>
                {
                    b.Property<int>("ID_Tarea")
                        .HasColumnType("int");

                    b.Property<int>("ID_Categoria")
                        .HasColumnType("int");

                    b.Property<int>("IDTarea_Categoria")
                        .HasColumnType("int");

                    b.HasKey("ID_Tarea", "ID_Categoria");

                    b.HasIndex("ID_Categoria");

                    b.ToTable("TareaCategorias");
                });

            modelBuilder.Entity("GestorTareas_Api.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioID"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaDeCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GestorTareas_Api.Models.Tarea", b =>
                {
                    b.HasOne("GestorTareas_Api.Models.Usuario", "Usuario")
                        .WithMany("Tareas")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GestorTareas_Api.Models.TareaCategoria", b =>
                {
                    b.HasOne("GestorTareas_Api.Models.Categoria", "Categoria")
                        .WithMany("TareasCategorias")
                        .HasForeignKey("ID_Categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GestorTareas_Api.Models.Tarea", "Tarea")
                        .WithMany("TareasCategorias")
                        .HasForeignKey("ID_Tarea")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Tarea");
                });

            modelBuilder.Entity("GestorTareas_Api.Models.Categoria", b =>
                {
                    b.Navigation("TareasCategorias");
                });

            modelBuilder.Entity("GestorTareas_Api.Models.Tarea", b =>
                {
                    b.Navigation("TareasCategorias");
                });

            modelBuilder.Entity("GestorTareas_Api.Models.Usuario", b =>
                {
                    b.Navigation("Tareas");
                });
#pragma warning restore 612, 618
        }
    }
}
